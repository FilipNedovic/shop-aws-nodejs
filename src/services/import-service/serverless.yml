service: import-service
frameworkVersion: "3"
useDotenv: true
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::shop-aws-nodejs"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::shop-aws-nodejs/*"
        - Effect: "Allow"
          Action:
            - "sqs:*"
          Resource:
            - "arn:aws:sqs:us-east-1:773707999966:catalogItemsQueue"
functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: arn:aws:lambda:us-east-1:773707999966:function:authorization-service-dev-basicAuthorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: TOKEN
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: "shop-aws-nodejs"
          event: "s3:ObjectCreated:*"
          rules:
            - prefix: "uploaded/"
          existing: true
plugins:
  - serverless-auto-swagger
  - serverless-esbuild
  - serverless-dotenv-plugin
custom:
  autoswagger:
    apiType: http
    generateSwaggerOnDeploy: true
  esbuild:
    bundle: true
    minify: false
